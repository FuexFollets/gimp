/* LIBLIGMA - The LIGMA Library
 * Copyright (C) 1995-2003 Peter Mattis and Spencer Kimball
 *
 * ligmacontext_pdb.h
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

/* NOTE: This file is auto-generated by pdbgen.pl */

#if !defined (__LIGMA_H_INSIDE__) && !defined (LIGMA_COMPILATION)
#error "Only <libligma/ligma.h> can be included directly."
#endif

#ifndef __LIGMA_CONTEXT_PDB_H__
#define __LIGMA_CONTEXT_PDB_H__

G_BEGIN_DECLS

/* For information look into the C source or the html documentation */


gboolean                    ligma_context_push                           (void);
gboolean                    ligma_context_pop                            (void);
gboolean                    ligma_context_set_defaults                   (void);
gboolean                    ligma_context_list_paint_methods             (gchar                       ***paint_methods);
gchar*                      ligma_context_get_paint_method               (void);
gboolean                    ligma_context_set_paint_method               (const gchar                   *name);
LigmaStrokeMethod            ligma_context_get_stroke_method              (void);
gboolean                    ligma_context_set_stroke_method              (LigmaStrokeMethod               stroke_method);
gboolean                    ligma_context_get_foreground                 (LigmaRGB                       *foreground);
gboolean                    ligma_context_set_foreground                 (const LigmaRGB                 *foreground);
gboolean                    ligma_context_get_background                 (LigmaRGB                       *background);
gboolean                    ligma_context_set_background                 (const LigmaRGB                 *background);
gboolean                    ligma_context_set_default_colors             (void);
gboolean                    ligma_context_swap_colors                    (void);
gdouble                     ligma_context_get_opacity                    (void);
gboolean                    ligma_context_set_opacity                    (gdouble                        opacity);
LigmaLayerMode               ligma_context_get_paint_mode                 (void);
gboolean                    ligma_context_set_paint_mode                 (LigmaLayerMode                  paint_mode);
gdouble                     ligma_context_get_line_width                 (void);
gboolean                    ligma_context_set_line_width                 (gdouble                        line_width);
LigmaUnit                    ligma_context_get_line_width_unit            (void);
gboolean                    ligma_context_set_line_width_unit            (LigmaUnit                       line_width_unit);
LigmaCapStyle                ligma_context_get_line_cap_style             (void);
gboolean                    ligma_context_set_line_cap_style             (LigmaCapStyle                   cap_style);
LigmaJoinStyle               ligma_context_get_line_join_style            (void);
gboolean                    ligma_context_set_line_join_style            (LigmaJoinStyle                  join_style);
gdouble                     ligma_context_get_line_miter_limit           (void);
gboolean                    ligma_context_set_line_miter_limit           (gdouble                        miter_limit);
gdouble                     ligma_context_get_line_dash_offset           (void);
gboolean                    ligma_context_set_line_dash_offset           (gdouble                        dash_offset);
gboolean                    ligma_context_get_line_dash_pattern          (gint                          *num_dashes,
                                                                         gdouble                      **dashes);
gboolean                    ligma_context_set_line_dash_pattern          (gint                           num_dashes,
                                                                         const gdouble                 *dashes);
gchar*                      ligma_context_get_brush                      (void);
gboolean                    ligma_context_set_brush                      (const gchar                   *name);
gdouble                     ligma_context_get_brush_size                 (void);
gboolean                    ligma_context_set_brush_size                 (gdouble                        size);
gboolean                    ligma_context_set_brush_default_size         (void);
gdouble                     ligma_context_get_brush_aspect_ratio         (void);
gboolean                    ligma_context_set_brush_aspect_ratio         (gdouble                        aspect);
gdouble                     ligma_context_get_brush_angle                (void);
gboolean                    ligma_context_set_brush_angle                (gdouble                        angle);
gdouble                     ligma_context_get_brush_spacing              (void);
gboolean                    ligma_context_set_brush_spacing              (gdouble                        spacing);
gboolean                    ligma_context_set_brush_default_spacing      (void);
gdouble                     ligma_context_get_brush_hardness             (void);
gboolean                    ligma_context_set_brush_hardness             (gdouble                        hardness);
gboolean                    ligma_context_set_brush_default_hardness     (void);
gdouble                     ligma_context_get_brush_force                (void);
gboolean                    ligma_context_set_brush_force                (gdouble                        force);
gchar*                      ligma_context_get_dynamics                   (void);
gboolean                    ligma_context_set_dynamics                   (const gchar                   *name);
gboolean                    ligma_context_are_dynamics_enabled           (void);
gboolean                    ligma_context_enable_dynamics                (gboolean                       enable);
gchar*                      ligma_context_get_mypaint_brush              (void);
gboolean                    ligma_context_set_mypaint_brush              (const gchar                   *name);
gchar*                      ligma_context_get_pattern                    (void);
gboolean                    ligma_context_set_pattern                    (const gchar                   *name);
gchar*                      ligma_context_get_gradient                   (void);
gboolean                    ligma_context_set_gradient                   (const gchar                   *name);
gboolean                    ligma_context_set_gradient_fg_bg_rgb         (void);
gboolean                    ligma_context_set_gradient_fg_bg_hsv_cw      (void);
gboolean                    ligma_context_set_gradient_fg_bg_hsv_ccw     (void);
gboolean                    ligma_context_set_gradient_fg_transparent    (void);
LigmaGradientBlendColorSpace ligma_context_get_gradient_blend_color_space (void);
gboolean                    ligma_context_set_gradient_blend_color_space (LigmaGradientBlendColorSpace    blend_color_space);
LigmaRepeatMode              ligma_context_get_gradient_repeat_mode       (void);
gboolean                    ligma_context_set_gradient_repeat_mode       (LigmaRepeatMode                 repeat_mode);
gboolean                    ligma_context_get_gradient_reverse           (void);
gboolean                    ligma_context_set_gradient_reverse           (gboolean                       reverse);
gchar*                      ligma_context_get_palette                    (void);
gboolean                    ligma_context_set_palette                    (const gchar                   *name);
gchar*                      ligma_context_get_font                       (void);
gboolean                    ligma_context_set_font                       (const gchar                   *name);
gboolean                    ligma_context_get_antialias                  (void);
gboolean                    ligma_context_set_antialias                  (gboolean                       antialias);
gboolean                    ligma_context_get_feather                    (void);
gboolean                    ligma_context_set_feather                    (gboolean                       feather);
gboolean                    ligma_context_get_feather_radius             (gdouble                       *feather_radius_x,
                                                                         gdouble                       *feather_radius_y);
gboolean                    ligma_context_set_feather_radius             (gdouble                        feather_radius_x,
                                                                         gdouble                        feather_radius_y);
gboolean                    ligma_context_get_sample_merged              (void);
gboolean                    ligma_context_set_sample_merged              (gboolean                       sample_merged);
LigmaSelectCriterion         ligma_context_get_sample_criterion           (void);
gboolean                    ligma_context_set_sample_criterion           (LigmaSelectCriterion            sample_criterion);
gdouble                     ligma_context_get_sample_threshold           (void);
gboolean                    ligma_context_set_sample_threshold           (gdouble                        sample_threshold);
gint                        ligma_context_get_sample_threshold_int       (void);
gboolean                    ligma_context_set_sample_threshold_int       (gint                           sample_threshold);
gboolean                    ligma_context_get_sample_transparent         (void);
gboolean                    ligma_context_set_sample_transparent         (gboolean                       sample_transparent);
gboolean                    ligma_context_get_diagonal_neighbors         (void);
gboolean                    ligma_context_set_diagonal_neighbors         (gboolean                       diagonal_neighbors);
GeglDistanceMetric          ligma_context_get_distance_metric            (void);
gboolean                    ligma_context_set_distance_metric            (GeglDistanceMetric             metric);
LigmaInterpolationType       ligma_context_get_interpolation              (void);
gboolean                    ligma_context_set_interpolation              (LigmaInterpolationType          interpolation);
LigmaTransformDirection      ligma_context_get_transform_direction        (void);
gboolean                    ligma_context_set_transform_direction        (LigmaTransformDirection         transform_direction);
LigmaTransformResize         ligma_context_get_transform_resize           (void);
gboolean                    ligma_context_set_transform_resize           (LigmaTransformResize            transform_resize);
gdouble                     ligma_context_get_ink_size                   (void);
gboolean                    ligma_context_set_ink_size                   (gdouble                        size);
gdouble                     ligma_context_get_ink_angle                  (void);
gboolean                    ligma_context_set_ink_angle                  (gdouble                        angle);
gdouble                     ligma_context_get_ink_size_sensitivity       (void);
gboolean                    ligma_context_set_ink_size_sensitivity       (gdouble                        size);
gdouble                     ligma_context_get_ink_tilt_sensitivity       (void);
gboolean                    ligma_context_set_ink_tilt_sensitivity       (gdouble                        tilt);
gdouble                     ligma_context_get_ink_speed_sensitivity      (void);
gboolean                    ligma_context_set_ink_speed_sensitivity      (gdouble                        speed);
LigmaInkBlobType             ligma_context_get_ink_blob_type              (void);
gboolean                    ligma_context_set_ink_blob_type              (LigmaInkBlobType                type);
gdouble                     ligma_context_get_ink_blob_aspect_ratio      (void);
gboolean                    ligma_context_set_ink_blob_aspect_ratio      (gdouble                        aspect);
gdouble                     ligma_context_get_ink_blob_angle             (void);
gboolean                    ligma_context_set_ink_blob_angle             (gdouble                        angle);


G_END_DECLS

#endif /* __LIGMA_CONTEXT_PDB_H__ */
