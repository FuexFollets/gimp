/* LIBLIGMA - The LIGMA Library
 * Copyright (C) 1995-2003 Peter Mattis and Spencer Kimball
 *
 * ligmaimage_pdb.h
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

/* NOTE: This file is auto-generated by pdbgen.pl */

#if !defined (__LIGMA_H_INSIDE__) && !defined (LIGMA_COMPILATION)
#error "Only <libligma/ligma.h> can be included directly."
#endif

#ifndef __LIGMA_IMAGE_PDB_H__
#define __LIGMA_IMAGE_PDB_H__

G_BEGIN_DECLS

/* For information look into the C source or the html documentation */


gboolean                 ligma_image_id_is_valid                (gint                 image_id);
LigmaImage**              ligma_get_images                       (gint                *num_images);
LigmaImage*               ligma_image_new                        (gint                 width,
                                                                gint                 height,
                                                                LigmaImageBaseType    type);
LigmaImage*               ligma_image_new_with_precision         (gint                 width,
                                                                gint                 height,
                                                                LigmaImageBaseType    type,
                                                                LigmaPrecision        precision);
LigmaImage*               ligma_image_duplicate                  (LigmaImage           *image);
gboolean                 ligma_image_delete                     (LigmaImage           *image);
LigmaImageBaseType        ligma_image_get_base_type              (LigmaImage           *image);
LigmaPrecision            ligma_image_get_precision              (LigmaImage           *image);
LigmaLayerMode            ligma_image_get_default_new_layer_mode (LigmaImage           *image);
gint                     ligma_image_get_width                  (LigmaImage           *image);
gint                     ligma_image_get_height                 (LigmaImage           *image);
LigmaLayer**              ligma_image_get_layers                 (LigmaImage           *image,
                                                                gint                *num_layers);
LigmaChannel**            ligma_image_get_channels               (LigmaImage           *image,
                                                                gint                *num_channels);
LigmaVectors**            ligma_image_get_vectors                (LigmaImage           *image,
                                                                gint                *num_vectors);
gboolean                 ligma_image_unset_active_channel       (LigmaImage           *image);
LigmaLayer*               ligma_image_get_floating_sel           (LigmaImage           *image);
LigmaDrawable*            ligma_image_floating_sel_attached_to   (LigmaImage           *image);
gboolean                 ligma_image_pick_color                 (LigmaImage           *image,
                                                                gint                 num_drawables,
                                                                const LigmaItem     **drawables,
                                                                gdouble              x,
                                                                gdouble              y,
                                                                gboolean             sample_merged,
                                                                gboolean             sample_average,
                                                                gdouble              average_radius,
                                                                LigmaRGB             *color);
LigmaLayer*               ligma_image_pick_correlate_layer       (LigmaImage           *image,
                                                                gint                 x,
                                                                gint                 y);
gboolean                 ligma_image_insert_layer               (LigmaImage           *image,
                                                                LigmaLayer           *layer,
                                                                LigmaLayer           *parent,
                                                                gint                 position);
gboolean                 ligma_image_remove_layer               (LigmaImage           *image,
                                                                LigmaLayer           *layer);
gboolean                 ligma_image_freeze_layers              (LigmaImage           *image);
gboolean                 ligma_image_thaw_layers                (LigmaImage           *image);
gboolean                 ligma_image_insert_channel             (LigmaImage           *image,
                                                                LigmaChannel         *channel,
                                                                LigmaChannel         *parent,
                                                                gint                 position);
gboolean                 ligma_image_remove_channel             (LigmaImage           *image,
                                                                LigmaChannel         *channel);
gboolean                 ligma_image_freeze_channels            (LigmaImage           *image);
gboolean                 ligma_image_thaw_channels              (LigmaImage           *image);
gboolean                 ligma_image_insert_vectors             (LigmaImage           *image,
                                                                LigmaVectors         *vectors,
                                                                LigmaVectors         *parent,
                                                                gint                 position);
gboolean                 ligma_image_remove_vectors             (LigmaImage           *image,
                                                                LigmaVectors         *vectors);
gboolean                 ligma_image_freeze_vectors             (LigmaImage           *image);
gboolean                 ligma_image_thaw_vectors               (LigmaImage           *image);
gint                     ligma_image_get_item_position          (LigmaImage           *image,
                                                                LigmaItem            *item);
gboolean                 ligma_image_raise_item                 (LigmaImage           *image,
                                                                LigmaItem            *item);
gboolean                 ligma_image_lower_item                 (LigmaImage           *image,
                                                                LigmaItem            *item);
gboolean                 ligma_image_raise_item_to_top          (LigmaImage           *image,
                                                                LigmaItem            *item);
gboolean                 ligma_image_lower_item_to_bottom       (LigmaImage           *image,
                                                                LigmaItem            *item);
gboolean                 ligma_image_reorder_item               (LigmaImage           *image,
                                                                LigmaItem            *item,
                                                                LigmaItem            *parent,
                                                                gint                 position);
LigmaLayer*               ligma_image_flatten                    (LigmaImage           *image);
LigmaLayer*               ligma_image_merge_visible_layers       (LigmaImage           *image,
                                                                LigmaMergeType        merge_type);
LigmaLayer*               ligma_image_merge_down                 (LigmaImage           *image,
                                                                LigmaLayer           *merge_layer,
                                                                LigmaMergeType        merge_type);
LigmaLayer*               ligma_image_merge_layer_group          (LigmaImage           *image,
                                                                LigmaLayer           *layer_group);
G_GNUC_INTERNAL guint8*  _ligma_image_get_colormap              (LigmaImage           *image,
                                                                gint                *num_bytes);
G_GNUC_INTERNAL gboolean _ligma_image_set_colormap              (LigmaImage           *image,
                                                                gint                 num_bytes,
                                                                const guint8        *colormap);
G_GNUC_INTERNAL gchar*   _ligma_image_get_metadata              (LigmaImage           *image);
G_GNUC_INTERNAL gboolean _ligma_image_set_metadata              (LigmaImage           *image,
                                                                const gchar         *metadata_string);
gboolean                 ligma_image_clean_all                  (LigmaImage           *image);
gboolean                 ligma_image_is_dirty                   (LigmaImage           *image);
G_GNUC_INTERNAL gboolean _ligma_image_thumbnail                 (LigmaImage           *image,
                                                                gint                 width,
                                                                gint                 height,
                                                                gint                *actual_width,
                                                                gint                *actual_height,
                                                                gint                *bpp,
                                                                gint                *thumbnail_data_count,
                                                                guint8             **thumbnail_data);
LigmaLayer**              ligma_image_get_selected_layers        (LigmaImage           *image,
                                                                gint                *num_layers);
gboolean                 ligma_image_set_selected_layers        (LigmaImage           *image,
                                                                gint                 num_layers,
                                                                const LigmaLayer    **layers);
LigmaChannel**            ligma_image_get_selected_channels      (LigmaImage           *image,
                                                                gint                *num_channels);
gboolean                 ligma_image_set_selected_channels      (LigmaImage           *image,
                                                                gint                 num_channels,
                                                                const LigmaChannel  **channels);
LigmaVectors**            ligma_image_get_selected_vectors       (LigmaImage           *image,
                                                                gint                *num_vectors);
gboolean                 ligma_image_set_selected_vectors       (LigmaImage           *image,
                                                                gint                 num_vectors,
                                                                const LigmaVectors  **vectors);
LigmaItem**               ligma_image_get_selected_drawables     (LigmaImage           *image,
                                                                gint                *num_drawables);
LigmaSelection*           ligma_image_get_selection              (LigmaImage           *image);
gboolean                 ligma_image_get_component_active       (LigmaImage           *image,
                                                                LigmaChannelType      component);
gboolean                 ligma_image_set_component_active       (LigmaImage           *image,
                                                                LigmaChannelType      component,
                                                                gboolean             active);
gboolean                 ligma_image_get_component_visible      (LigmaImage           *image,
                                                                LigmaChannelType      component);
gboolean                 ligma_image_set_component_visible      (LigmaImage           *image,
                                                                LigmaChannelType      component,
                                                                gboolean             visible);
GFile*                   ligma_image_get_file                   (LigmaImage           *image);
gboolean                 ligma_image_set_file                   (LigmaImage           *image,
                                                                GFile               *file);
GFile*                   ligma_image_get_xcf_file               (LigmaImage           *image);
GFile*                   ligma_image_get_imported_file          (LigmaImage           *image);
GFile*                   ligma_image_get_exported_file          (LigmaImage           *image);
gchar*                   ligma_image_get_name                   (LigmaImage           *image);
gboolean                 ligma_image_get_resolution             (LigmaImage           *image,
                                                                gdouble             *xresolution,
                                                                gdouble             *yresolution);
gboolean                 ligma_image_set_resolution             (LigmaImage           *image,
                                                                gdouble              xresolution,
                                                                gdouble              yresolution);
LigmaUnit                 ligma_image_get_unit                   (LigmaImage           *image);
gboolean                 ligma_image_set_unit                   (LigmaImage           *image,
                                                                LigmaUnit             unit);
guint                    ligma_image_get_tattoo_state           (LigmaImage           *image);
gboolean                 ligma_image_set_tattoo_state           (LigmaImage           *image,
                                                                guint                tattoo_state);
LigmaLayer*               ligma_image_get_layer_by_tattoo        (LigmaImage           *image,
                                                                guint                tattoo);
LigmaChannel*             ligma_image_get_channel_by_tattoo      (LigmaImage           *image,
                                                                guint                tattoo);
LigmaVectors*             ligma_image_get_vectors_by_tattoo      (LigmaImage           *image,
                                                                guint                tattoo);
LigmaLayer*               ligma_image_get_layer_by_name          (LigmaImage           *image,
                                                                const gchar         *name);
LigmaChannel*             ligma_image_get_channel_by_name        (LigmaImage           *image,
                                                                const gchar         *name);
LigmaVectors*             ligma_image_get_vectors_by_name        (LigmaImage           *image,
                                                                const gchar         *name);
gboolean                 ligma_image_attach_parasite            (LigmaImage           *image,
                                                                const LigmaParasite  *parasite);
gboolean                 ligma_image_detach_parasite            (LigmaImage           *image,
                                                                const gchar         *name);
LigmaParasite*            ligma_image_get_parasite               (LigmaImage           *image,
                                                                const gchar         *name);
gchar**                  ligma_image_get_parasite_list          (LigmaImage           *image);
gboolean                 ligma_image_policy_rotate              (LigmaImage           *image,
                                                                gboolean             interactive);
gboolean                 ligma_image_policy_color_profile       (LigmaImage           *image,
                                                                gboolean             interactive);


G_END_DECLS

#endif /* __LIGMA_IMAGE_PDB_H__ */
