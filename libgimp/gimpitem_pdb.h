/* LIBLIGMA - The LIGMA Library
 * Copyright (C) 1995-2003 Peter Mattis and Spencer Kimball
 *
 * ligmaitem_pdb.h
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.  If not, see
 * <https://www.gnu.org/licenses/>.
 */

/* NOTE: This file is auto-generated by pdbgen.pl */

#if !defined (__LIGMA_H_INSIDE__) && !defined (LIGMA_COMPILATION)
#error "Only <libligma/ligma.h> can be included directly."
#endif

#ifndef __LIGMA_ITEM_PDB_H__
#define __LIGMA_ITEM_PDB_H__

G_BEGIN_DECLS

/* For information look into the C source or the html documentation */


gboolean      ligma_item_id_is_valid         (gint                item_id);
gboolean      ligma_item_id_is_drawable      (gint                item_id);
gboolean      ligma_item_id_is_layer         (gint                item_id);
gboolean      ligma_item_id_is_text_layer    (gint                item_id);
gboolean      ligma_item_id_is_channel       (gint                item_id);
gboolean      ligma_item_id_is_layer_mask    (gint                item_id);
gboolean      ligma_item_id_is_selection     (gint                item_id);
gboolean      ligma_item_id_is_vectors       (gint                item_id);
LigmaImage*    ligma_item_get_image           (LigmaItem           *item);
gboolean      ligma_item_delete              (LigmaItem           *item);
gboolean      ligma_item_is_group            (LigmaItem           *item);
LigmaItem*     ligma_item_get_parent          (LigmaItem           *item);
LigmaItem**    ligma_item_get_children        (LigmaItem           *item,
                                             gint               *num_children);
gboolean      ligma_item_get_expanded        (LigmaItem           *item);
gboolean      ligma_item_set_expanded        (LigmaItem           *item,
                                             gboolean            expanded);
gchar*        ligma_item_get_name            (LigmaItem           *item);
gboolean      ligma_item_set_name            (LigmaItem           *item,
                                             const gchar        *name);
gboolean      ligma_item_get_visible         (LigmaItem           *item);
gboolean      ligma_item_set_visible         (LigmaItem           *item,
                                             gboolean            visible);
gboolean      ligma_item_get_lock_content    (LigmaItem           *item);
gboolean      ligma_item_set_lock_content    (LigmaItem           *item,
                                             gboolean            lock_content);
gboolean      ligma_item_get_lock_position   (LigmaItem           *item);
gboolean      ligma_item_set_lock_position   (LigmaItem           *item,
                                             gboolean            lock_position);
gboolean      ligma_item_get_lock_visibility (LigmaItem           *item);
gboolean      ligma_item_set_lock_visibility (LigmaItem           *item,
                                             gboolean            lock_visibility);
LigmaColorTag  ligma_item_get_color_tag       (LigmaItem           *item);
gboolean      ligma_item_set_color_tag       (LigmaItem           *item,
                                             LigmaColorTag        color_tag);
guint         ligma_item_get_tattoo          (LigmaItem           *item);
gboolean      ligma_item_set_tattoo          (LigmaItem           *item,
                                             guint               tattoo);
gboolean      ligma_item_attach_parasite     (LigmaItem           *item,
                                             const LigmaParasite *parasite);
gboolean      ligma_item_detach_parasite     (LigmaItem           *item,
                                             const gchar        *name);
LigmaParasite* ligma_item_get_parasite        (LigmaItem           *item,
                                             const gchar        *name);
gchar**       ligma_item_get_parasite_list   (LigmaItem           *item);


G_END_DECLS

#endif /* __LIGMA_ITEM_PDB_H__ */
